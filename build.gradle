apply plugin: 'java'
apply from: 'gradle/release.gradle'
apply from: 'gradle/maven.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

group = 'com.smartling'
archivesBaseName = 'ml-text'

println "Building version '${version}'"

dependencies {
    compile 'com.facebook.thirdparty:libsvm:3.18.1'
    compile 'com.ibm.icu:icu4j:55.1'
    compile 'commons-io:commons-io:2.4'
    compile 'org.ahocorasick:ahocorasick:0.2.4'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.commons:commons-math3:3.5'
    compile "org.slf4j:slf4j-api:1.7.10"
    compile 'org.yaml:snakeyaml:1.15'

    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'junit:junit:4.11'

    testRuntime "ch.qos.logback:logback-classic:1.1.3"
}

test {
    reports.junitXml.destination = file("${rootDir}/tests-output")
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name')
        attributes 'Implementation-Title': 'Smartling Text Classifier Library',
                'Implementation-Version': "${version} " + new Date(),
                'Implementation-Vendor': 'Smartling Inc.',
                'com/smartling/ml-text/'
    }
}

def configurePom(def pom) {
  pom.project {
    name rootProject.name
    description 'Smartling Text Classifier Library'
    inceptionYear '2015'
    packaging 'jar'

    url 'https://github.com/Smartling/ml-text'

    developers {
      developer {
        id 'paiv'
        name 'Pavel Ivashkov'
      }
    }

    scm {
      url 'https://github.com/Smartling/ml-text'
    }

    licenses {
      license {
        name 'The Apache License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      }
    }

    properties {
      setProperty('project.build.sourceEncoding', 'UTF-8')
    }
  }
}
